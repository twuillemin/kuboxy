// The following directive is necessary to make the package coherent:

// +build ignore

// This program generates events_controller_all.go. It can be invoked by running
// go generate

package main

import (
	"log"
	"os"
	"text/template"
	"time"

	"github.com/twuillemin/kuboxy/pkg/types"
)

func main() {

	f, err := os.Create("events_controller_all.go")
	die(err)
	defer f.Close()

	builderTemplate.Execute(
		f,
		struct {
			Timestamp         time.Time
			ObjectDefinitions []types.ObjectDefinition
		}{
			Timestamp:         time.Now(),
			ObjectDefinitions: types.ObjectDefinitions,
		})
}

func die(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

var builderTemplate = template.Must(template.New("").Parse(`// Package controller regroups all the HTTP controllers of the application 
//
// Code generated by go generate; DO NOT EDIT.
//
// This file was generated by gen_events_controller_all.go at {{ .Timestamp }}
package controller

import (
	"github.com/twuillemin/kuboxy/pkg/types"
)

func addEventSource(source eventSource, forwarders []*forwarderInformation, sendChannel chan interface{})([]*forwarderInformation, error){

	var forwarder *forwarderInformation
	var err error

	switch source.ObjectType{
{{ range .ObjectDefinitions }}
	case types.{{ .Name }}:
		forwarder, err = add{{ .Name }}EventForwarder(source, sendChannel)
{{ end }}
	}

	if err != nil{
		return forwarders, err
	}

	return append(forwarders, forwarder), nil
}
`))
