// Package provider regroups all the basic CRUD functions to access the objects in the cluster
//
// Code generated by go generate; DO NOT EDIT.
//
// This file was generated by gen_provider_namespace_metrics.go at 2019-06-17 12:12:21.420661194 +0300 EEST m=+0.000836258
package provider

import (
	"github.com/twuillemin/kuboxy/pkg/connector"
	"github.com/twuillemin/kuboxy/pkg/context"
	"github.com/twuillemin/kuboxy/pkg/event"
	metricsv1beta1 "k8s.io/metrics/pkg/apis/metrics/v1beta1"
)

// GetPodMetricses returns all the PodMetrics. If an empty namespace is given, returns all the PodMetrics
func GetPodMetricses(contextName string, namespace string) ([]metricsv1beta1.PodMetrics, error) {

	metrics, err := context.GetMetrics(contextName)
	if err != nil {
		return nil, err
	}

	if results := event.GetPodMetricses(contextName, namespace); results != nil {
		return results, nil
	}

	return connector.GetPodMetricses(metrics, namespace)
}

// GetPodMetrics returns the PodMetrics by its name. An optional namespace can be given, if none is given
// the operation takes place in the default name space.
func GetPodMetrics(contextName string, namespace string, name string) (*metricsv1beta1.PodMetrics, error) {

	metrics, err := context.GetMetrics(contextName)
	if err != nil {
		return nil, err
	}

	if results := event.GetPodMetricses(contextName, namespace); results != nil {
		for _, podMetrics := range results {
			if podMetrics.Name == name {
				return &podMetrics, nil
			}
		}
		return nil, nil
	}

	return connector.GetPodMetrics(metrics, namespace, name)
}
