{
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/api/v1/configuration/": {
            "get": {
                "description": "get the configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the configuration",
                "operationId": "get-configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.KubeConfig"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/": {
            "get": {
                "description": "get the clusters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the clusters",
                "operationId": "get-configuration-clusters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/context.NamedCluster"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/{name}/certificate-embedded": {
            "put": {
                "description": "Update an existing cluster for which the TLS certificate is given embedded (raw text)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing cluster with its certificate embedded",
                "operationId": "put-configuration-cluster-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster for which the TLS certificate is given as embedded (raw text)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new cluster with its certificates embedded",
                "operationId": "post-configuration-cluster-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/{name}/certificate-file": {
            "put": {
                "description": "Update an existing cluster for which the TLS certificate is given as a local file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing cluster with its certificate given as a local file",
                "operationId": "put-configuration-cluster-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster for which the TLS certificate is given as a local file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new cluster with its certificate given as a local file",
                "operationId": "post-configuration-cluster-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/{name}/insecure": {
            "put": {
                "description": "Update an existing cluster for which the TLS certificate is not verified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing cluster",
                "operationId": "put-configuration-cluster-insecure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterInsecure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster for which the TLS certificate is not verified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new cluster",
                "operationId": "post-configuration-cluster-insecure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterInsecure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/contexts/": {
            "get": {
                "description": "get the contexts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the contexts",
                "operationId": "get-configuration-contexts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/context.NamedContext"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/contexts/{name}": {
            "put": {
                "description": "Update an existing cluster: user and cluster, with an optional namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing context",
                "operationId": "put-configuration-context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the context",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamContext"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new context: user and cluster, with an optional namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new context",
                "operationId": "post-configuration-context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the context",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamContext"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedContext"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/": {
            "get": {
                "description": "get the users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the users",
                "operationId": "get-configuration-users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/context.NamedUser"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/{name}/certificate-embedded": {
            "put": {
                "description": "Update an existing user by giving its name in the configuration and its certificates embedded",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing user with the certificates embedded",
                "operationId": "put-configuration-user-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user by giving its name in the configuration and its certificates embedded",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new user with the certificates embedded",
                "operationId": "post-configuration-user-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/{name}/certificate-file": {
            "put": {
                "description": "Update an existing user by giving its name in the configuration and its certificates as local files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing user with the certificates given as local files",
                "operationId": "put-configuration-user-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user by giving its name in the configuration and its certificates as local files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new user with the certificates given as local files",
                "operationId": "post-configuration-user-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/{name}/username-password": {
            "put": {
                "description": "Update an existing user by giving its name in the configuration and the username and the\npassword to connect to the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing user",
                "operationId": "put-configuration-user-username-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsUserNamePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user by giving its name in the configuration and the username and the\npassword to connect to the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new user",
                "operationId": "post-configuration-user-username-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsUserNamePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/events/": {
            "get": {
                "description": "the websocket used for receiving the configuration and then return the requested events. Each event is a full object when created / updated / deleted",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Connect to a WebSocket for managing events (port 8081)",
                "operationId": "get-events-by-websocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the configuration",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/labels/{contextName}/{namespace}": {
            "get": {
                "description": "Get all the labels and their values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Get all the labels and their values",
                "operationId": "get-labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/MapOfStrings"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoleBindings": {
            "get": {
                "description": "Get all clusterRoleBindings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all clusterRoleBindings",
                "operationId": "get-object-clusterRoleBindings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClusterRoleBinding"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a clusterRoleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a clusterRoleBinding",
                "operationId": "update-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRoleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a clusterRoleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a clusterRoleBinding",
                "operationId": "create-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRoleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoleBindings/{name}": {
            "get": {
                "description": "Get a clusterRoleBinding by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a clusterRoleBinding",
                "operationId": "get-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a clusterRoleBinding by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a clusterRoleBinding",
                "operationId": "delete-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoles": {
            "get": {
                "description": "Get all clusterRoles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all clusterRoles",
                "operationId": "get-object-clusterRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClusterRole"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a clusterRole.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a clusterRole",
                "operationId": "update-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRole",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a clusterRole.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a clusterRole",
                "operationId": "create-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRole",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoles/{name}": {
            "get": {
                "description": "Get a clusterRole by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a clusterRole",
                "operationId": "get-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a clusterRole by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a clusterRole",
                "operationId": "delete-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/configMaps/{namespace}": {
            "get": {
                "description": "Get all configMaps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all configMaps",
                "operationId": "get-object-configMaps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConfigMap"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a configMap.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a configMap",
                "operationId": "update-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the configMap",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a configMap.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a configMap",
                "operationId": "create-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the configMap",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/configMaps/{namespace}/{name}": {
            "get": {
                "description": "Get a configMap by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a configMap",
                "operationId": "get-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a configMap by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a configMap",
                "operationId": "delete-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/cronJobs/{namespace}": {
            "get": {
                "description": "Get all cronJobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all cronJobs",
                "operationId": "get-object-cronJobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CronJob"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a cronJob.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a cronJob",
                "operationId": "update-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cronJob",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a cronJob.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a cronJob",
                "operationId": "create-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cronJob",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/cronJobs/{namespace}/{name}": {
            "get": {
                "description": "Get a cronJob by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a cronJob",
                "operationId": "get-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cronJob by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a cronJob",
                "operationId": "delete-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/daemonSets/{namespace}": {
            "get": {
                "description": "Get all daemonSets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all daemonSets",
                "operationId": "get-object-daemonSets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DaemonSet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a daemonSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a daemonSet",
                "operationId": "update-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the daemonSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a daemonSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a daemonSet",
                "operationId": "create-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the daemonSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/daemonSets/{namespace}/{name}": {
            "get": {
                "description": "Get a daemonSet by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a daemonSet",
                "operationId": "get-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a daemonSet by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a daemonSet",
                "operationId": "delete-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/deployments/{namespace}": {
            "get": {
                "description": "Get all deployments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all deployments",
                "operationId": "get-object-deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deployment"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a deployment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a deployment",
                "operationId": "update-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the deployment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a deployment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a deployment",
                "operationId": "create-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the deployment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/deployments/{namespace}/{name}": {
            "get": {
                "description": "Get a deployment by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a deployment",
                "operationId": "get-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a deployment by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a deployment",
                "operationId": "delete-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/jobs/{namespace}": {
            "get": {
                "description": "Get all jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all jobs",
                "operationId": "get-object-jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Job"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a job",
                "operationId": "update-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the job",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a job",
                "operationId": "create-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the job",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/jobs/{namespace}/{name}": {
            "get": {
                "description": "Get a job by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a job",
                "operationId": "get-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a job",
                "operationId": "delete-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/namespaces": {
            "get": {
                "description": "Get all namespaces",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all namespaces",
                "operationId": "get-object-namespaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Namespace"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a namespace",
                "operationId": "update-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the namespace",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a namespace",
                "operationId": "create-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the namespace",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/namespaces/{name}": {
            "get": {
                "description": "Get a namespace by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a namespace",
                "operationId": "get-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a namespace by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a namespace",
                "operationId": "delete-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/networkPolicies/{namespace}": {
            "get": {
                "description": "Get all networkPolicies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all networkPolicies",
                "operationId": "get-object-networkPolicies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkPolicy"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a networkPolicy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a networkPolicy",
                "operationId": "update-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the networkPolicy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a networkPolicy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a networkPolicy",
                "operationId": "create-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the networkPolicy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/networkPolicies/{namespace}/{name}": {
            "get": {
                "description": "Get a networkPolicy by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a networkPolicy",
                "operationId": "get-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a networkPolicy by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a networkPolicy",
                "operationId": "delete-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodeMetricses": {
            "get": {
                "description": "Get all nodeMetricses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all nodeMetricses",
                "operationId": "get-object-nodeMetricses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NodeMetrics"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodeMetricses/{name}": {
            "get": {
                "description": "Get a nodeMetrics by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a nodeMetrics",
                "operationId": "get-object-nodeMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NodeMetrics"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodes": {
            "get": {
                "description": "Get all nodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all nodes",
                "operationId": "get-object-nodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a node.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a node",
                "operationId": "update-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the node",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a node.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a node",
                "operationId": "create-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the node",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodes/{name}": {
            "get": {
                "description": "Get a node by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a node",
                "operationId": "get-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a node by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a node",
                "operationId": "delete-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumeClaims/{namespace}": {
            "get": {
                "description": "Get all persistentVolumeClaims",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all persistentVolumeClaims",
                "operationId": "get-object-persistentVolumeClaims",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersistentVolumeClaim"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a persistentVolumeClaim.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a persistentVolumeClaim",
                "operationId": "update-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolumeClaim",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a persistentVolumeClaim.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a persistentVolumeClaim",
                "operationId": "create-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolumeClaim",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumeClaims/{namespace}/{name}": {
            "get": {
                "description": "Get a persistentVolumeClaim by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a persistentVolumeClaim",
                "operationId": "get-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a persistentVolumeClaim by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a persistentVolumeClaim",
                "operationId": "delete-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumes": {
            "get": {
                "description": "Get all persistentVolumes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all persistentVolumes",
                "operationId": "get-object-persistentVolumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersistentVolume"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a persistentVolume.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a persistentVolume",
                "operationId": "update-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolume",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a persistentVolume.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a persistentVolume",
                "operationId": "create-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolume",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumes/{name}": {
            "get": {
                "description": "Get a persistentVolume by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a persistentVolume",
                "operationId": "get-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a persistentVolume by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a persistentVolume",
                "operationId": "delete-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/podMetricses/{namespace}": {
            "get": {
                "description": "Get all podMetricses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all podMetricses",
                "operationId": "get-object-podMetricses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PodMetrics"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/podMetricses/{namespace}/{name}": {
            "get": {
                "description": "Get a podMetrics by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a podMetrics",
                "operationId": "get-object-podMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PodMetrics"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/pods/{namespace}": {
            "get": {
                "description": "Get all pods",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all pods",
                "operationId": "get-object-pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pod"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a pod.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a pod",
                "operationId": "update-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the pod",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a pod.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a pod",
                "operationId": "create-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the pod",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/pods/{namespace}/{name}": {
            "get": {
                "description": "Get a pod by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a pod",
                "operationId": "get-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a pod by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a pod",
                "operationId": "delete-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicaSets/{namespace}": {
            "get": {
                "description": "Get all replicaSets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all replicaSets",
                "operationId": "get-object-replicaSets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReplicaSet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a replicaSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a replicaSet",
                "operationId": "update-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicaSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a replicaSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a replicaSet",
                "operationId": "create-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicaSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicaSets/{namespace}/{name}": {
            "get": {
                "description": "Get a replicaSet by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a replicaSet",
                "operationId": "get-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a replicaSet by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a replicaSet",
                "operationId": "delete-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicationControllers/{namespace}": {
            "get": {
                "description": "Get all replicationControllers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all replicationControllers",
                "operationId": "get-object-replicationControllers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReplicationController"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a replicationController.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a replicationController",
                "operationId": "update-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicationController",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a replicationController.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a replicationController",
                "operationId": "create-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicationController",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicationControllers/{namespace}/{name}": {
            "get": {
                "description": "Get a replicationController by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a replicationController",
                "operationId": "get-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a replicationController by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a replicationController",
                "operationId": "delete-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roleBindings/{namespace}": {
            "get": {
                "description": "Get all roleBindings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all roleBindings",
                "operationId": "get-object-roleBindings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleBinding"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a roleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a roleBinding",
                "operationId": "update-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the roleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a roleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a roleBinding",
                "operationId": "create-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the roleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roleBindings/{namespace}/{name}": {
            "get": {
                "description": "Get a roleBinding by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a roleBinding",
                "operationId": "get-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a roleBinding by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a roleBinding",
                "operationId": "delete-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roles/{namespace}": {
            "get": {
                "description": "Get all roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all roles",
                "operationId": "get-object-roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a role",
                "operationId": "update-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a role",
                "operationId": "create-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roles/{namespace}/{name}": {
            "get": {
                "description": "Get a role by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a role",
                "operationId": "get-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a role",
                "operationId": "delete-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/secrets/{namespace}": {
            "get": {
                "description": "Get all secrets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all secrets",
                "operationId": "get-object-secrets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Secret"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a secret.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a secret",
                "operationId": "update-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a secret.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a secret",
                "operationId": "create-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/secrets/{namespace}/{name}": {
            "get": {
                "description": "Get a secret by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a secret",
                "operationId": "get-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a secret by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a secret",
                "operationId": "delete-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/serviceAccounts/{namespace}": {
            "get": {
                "description": "Get all serviceAccounts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all serviceAccounts",
                "operationId": "get-object-serviceAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceAccount"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a serviceAccount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a serviceAccount",
                "operationId": "update-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the serviceAccount",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a serviceAccount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a serviceAccount",
                "operationId": "create-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the serviceAccount",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/serviceAccounts/{namespace}/{name}": {
            "get": {
                "description": "Get a serviceAccount by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a serviceAccount",
                "operationId": "get-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a serviceAccount by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a serviceAccount",
                "operationId": "delete-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/services/{namespace}": {
            "get": {
                "description": "Get all services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all services",
                "operationId": "get-object-services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a service",
                "operationId": "update-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the service",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a service",
                "operationId": "create-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the service",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/services/{namespace}/{name}": {
            "get": {
                "description": "Get a service by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a service",
                "operationId": "get-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a service by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a service",
                "operationId": "delete-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/statefulSets/{namespace}": {
            "get": {
                "description": "Get all statefulSets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all statefulSets",
                "operationId": "get-object-statefulSets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StatefulSet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a statefulSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a statefulSet",
                "operationId": "update-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the statefulSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a statefulSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a statefulSet",
                "operationId": "create-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the statefulSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/statefulSets/{namespace}/{name}": {
            "get": {
                "description": "Get a statefulSet by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a statefulSet",
                "operationId": "get-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a statefulSet by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a statefulSet",
                "operationId": "delete-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/storageClasses": {
            "get": {
                "description": "Get all storageClasses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all storageClasses",
                "operationId": "get-object-storageClasses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StorageClass"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a storageClass.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a storageClass",
                "operationId": "update-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the storageClass",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a storageClass.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a storageClass",
                "operationId": "create-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the storageClass",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/storageClasses/{name}": {
            "get": {
                "description": "Get a storageClass by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a storageClass",
                "operationId": "get-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a storageClass by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a storageClass",
                "operationId": "delete-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/search/{contextName}": {
            "post": {
                "description": "Search the context for all kind objects. All the parameters (except the object types) can be given as regexp.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search objects",
                "operationId": "post-search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the parameters of the search",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/search.Parameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/summary/{contextName}": {
            "get": {
                "description": "get the summary of a configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Summary"
                ],
                "summary": "Get the global status, or summary, of the given configuration",
                "operationId": "get-summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/report.ClusterStateReport"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "context.DefinitionCluster": {
            "type": "object",
            "properties": {
                "certificate-authority": {
                    "type": "string"
                },
                "certificate-authority-data": {
                    "type": "string"
                },
                "insecure-skip-tls-verify": {
                    "type": "boolean"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "context.DefinitionContext": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "context.DefinitionUser": {
            "type": "object",
            "properties": {
                "client-certificate": {
                    "type": "string"
                },
                "client-certificate-data": {
                    "type": "string"
                },
                "client-key": {
                    "type": "string"
                },
                "client-key-data": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "context.KubeConfig": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.NamedCluster"
                    }
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.NamedContext"
                    }
                },
                "current-context": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "preferences": {
                    "type": "object"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.NamedUser"
                    }
                }
            }
        },
        "context.NamedCluster": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "object",
                    "$ref": "#/definitions/context.DefinitionCluster"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "context.NamedContext": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "object",
                    "$ref": "#/definitions/context.DefinitionContext"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "context.NamedUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/context.DefinitionUser"
                }
            }
        },
        "context.ParamClusterCertificateEmbedded": {
            "type": "object",
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "context.ParamClusterCertificateFile": {
            "type": "object",
            "properties": {
                "certificateAuthority": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "context.ParamClusterInsecure": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "string"
                }
            }
        },
        "context.ParamContext": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "context.ParamCredentialsCertificateEmbedded": {
            "type": "object",
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                }
            }
        },
        "context.ParamCredentialsCertificateFile": {
            "type": "object",
            "properties": {
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                }
            }
        },
        "context.ParamCredentialsUserNamePassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "internal": {
                    "type": "error"
                },
                "message": {
                    "type": "object"
                }
            }
        },
        "report.ClusterStateReport": {
            "type": "object",
            "properties": {
                "configMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ConfigMapReport"
                    }
                },
                "deployments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.DeploymentReport"
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.NamespaceReport"
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.NodeReport"
                    }
                },
                "persistentVolumeClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PersistentVolumeClaimReport"
                    }
                },
                "persistentVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PersistentVolumeReport"
                    }
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PodReport"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.SecretReport"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ServiceReport"
                    }
                }
            }
        },
        "report.ConfigMapReport": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "report.ContainerReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PodPortReport"
                    }
                },
                "ready": {
                    "type": "boolean"
                }
            }
        },
        "report.DeploymentReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "selector": {
                    "type": "object"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.VolumeReport"
                    }
                }
            }
        },
        "report.NamespaceReport": {
            "type": "object",
            "properties": {
                "deploymentsIds": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podIds": {
                    "type": "string"
                },
                "serviceIds": {
                    "type": "string"
                }
            }
        },
        "report.NodeReport": {
            "type": "object",
            "properties": {
                "allowedCPUCores": {
                    "type": "integer"
                },
                "allowedRAM": {
                    "type": "integer"
                },
                "condition": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podIds": {
                    "type": "string"
                },
                "usageCPUCores": {
                    "type": "number"
                },
                "usageRAM": {
                    "type": "integer"
                }
            }
        },
        "report.PersistentVolumeClaimReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "report.PersistentVolumeReport": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "report.PodPortReport": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "report.PodReport": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ContainerReport"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "usageCPUCores": {
                    "type": "number"
                },
                "usageRAM": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.VolumeReport"
                    }
                }
            }
        },
        "report.SecretReport": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "report.ServicePortReport": {
            "type": "object",
            "properties": {
                "internalPort": {
                    "type": "integer"
                },
                "internalPortName": {
                    "type": "string"
                },
                "nodePort": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "report.ServiceReport": {
            "type": "object",
            "properties": {
                "clusterIP": {
                    "type": "string"
                },
                "externalIP": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podIds": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ServicePortReport"
                    }
                },
                "selector": {
                    "type": "object"
                }
            }
        },
        "report.VolumeReport": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "persistentVolumeClaimName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "search.Parameter": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "labelValue": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "objectTypes": {
                    "type": "string"
                }
            }
        }
    }
}