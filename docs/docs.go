// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-06-17 22:26:55.413497284 +0300 EEST m=+0.145456388

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/configuration/": {
            "get": {
                "description": "get the configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the configuration",
                "operationId": "get-configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.KubeConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/": {
            "get": {
                "description": "get the clusters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the clusters",
                "operationId": "get-configuration-clusters",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/context.NamedCluster"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/{name}/certificate-embedded": {
            "put": {
                "description": "Update an existing cluster for which the TLS certificate is given embedded (raw text)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing cluster with its certificate embedded",
                "operationId": "put-configuration-cluster-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster for which the TLS certificate is given as embedded (raw text)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new cluster with its certificates embedded",
                "operationId": "post-configuration-cluster-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/{name}/certificate-file": {
            "put": {
                "description": "Update an existing cluster for which the TLS certificate is given as a local file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing cluster with its certificate given as a local file",
                "operationId": "put-configuration-cluster-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster for which the TLS certificate is given as a local file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new cluster with its certificate given as a local file",
                "operationId": "post-configuration-cluster-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/clusters/{name}/insecure": {
            "put": {
                "description": "Update an existing cluster for which the TLS certificate is not verified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing cluster",
                "operationId": "put-configuration-cluster-insecure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterInsecure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster for which the TLS certificate is not verified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new cluster",
                "operationId": "post-configuration-cluster-insecure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the cluster in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cluster",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamClusterInsecure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/contexts/": {
            "get": {
                "description": "get the contexts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the contexts",
                "operationId": "get-configuration-contexts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/context.NamedContext"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/contexts/{name}": {
            "put": {
                "description": "Update an existing cluster: user and cluster, with an optional namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing context",
                "operationId": "put-configuration-context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the context",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamContext"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedCluster"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new context: user and cluster, with an optional namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new context",
                "operationId": "post-configuration-context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the context",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamContext"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedContext"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/": {
            "get": {
                "description": "get the users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Retrieve the users",
                "operationId": "get-configuration-users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/context.NamedUser"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/{name}/certificate-embedded": {
            "put": {
                "description": "Update an existing user by giving its name in the configuration and its certificates embedded",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing user with the certificates embedded",
                "operationId": "put-configuration-user-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user by giving its name in the configuration and its certificates embedded",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new user with the certificates embedded",
                "operationId": "post-configuration-user-embedded",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateEmbedded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/{name}/certificate-file": {
            "put": {
                "description": "Update an existing user by giving its name in the configuration and its certificates as local files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing user with the certificates given as local files",
                "operationId": "put-configuration-user-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user by giving its name in the configuration and its certificates as local files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new user with the certificates given as local files",
                "operationId": "post-configuration-user-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsCertificateFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/configuration/users/{name}/username-password": {
            "put": {
                "description": "Update an existing user by giving its name in the configuration and the username and the\npassword to connect to the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Update an existing user",
                "operationId": "put-configuration-user-username-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsUserNamePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user by giving its name in the configuration and the username and the\npassword to connect to the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Create a new user",
                "operationId": "post-configuration-user-username-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the user in the configuration",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.ParamCredentialsUserNamePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/context.NamedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/events/": {
            "get": {
                "description": "the websocket used for receiving the configuration and then return the requested events. Each event is a full object when created / updated / deleted",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Connect to a WebSocket for managing events (port 8081)",
                "operationId": "get-events-by-websocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the configuration",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/labels/{contextName}/{namespace}": {
            "get": {
                "description": "Get all the labels and their values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Get all the labels and their values",
                "operationId": "get-labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/MapOfStrings"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoleBindings": {
            "get": {
                "description": "Get all clusterRoleBindings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all clusterRoleBindings",
                "operationId": "get-object-clusterRoleBindings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClusterRoleBinding"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a clusterRoleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a clusterRoleBinding",
                "operationId": "update-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRoleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a clusterRoleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a clusterRoleBinding",
                "operationId": "create-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRoleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoleBindings/{name}": {
            "get": {
                "description": "Get a clusterRoleBinding by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a clusterRoleBinding",
                "operationId": "get-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRoleBinding"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a clusterRoleBinding by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a clusterRoleBinding",
                "operationId": "delete-object-clusterRoleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoles": {
            "get": {
                "description": "Get all clusterRoles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all clusterRoles",
                "operationId": "get-object-clusterRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClusterRole"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a clusterRole.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a clusterRole",
                "operationId": "update-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRole",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a clusterRole.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a clusterRole",
                "operationId": "create-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the clusterRole",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/clusterRoles/{name}": {
            "get": {
                "description": "Get a clusterRole by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a clusterRole",
                "operationId": "get-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ClusterRole"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a clusterRole by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a clusterRole",
                "operationId": "delete-object-clusterRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/configMaps/{namespace}": {
            "get": {
                "description": "Get all configMaps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all configMaps",
                "operationId": "get-object-configMaps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConfigMap"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a configMap.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a configMap",
                "operationId": "update-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the configMap",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a configMap.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a configMap",
                "operationId": "create-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the configMap",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/configMaps/{namespace}/{name}": {
            "get": {
                "description": "Get a configMap by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a configMap",
                "operationId": "get-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ConfigMap"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a configMap by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a configMap",
                "operationId": "delete-object-configMap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/cronJobs/{namespace}": {
            "get": {
                "description": "Get all cronJobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all cronJobs",
                "operationId": "get-object-cronJobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CronJob"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a cronJob.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a cronJob",
                "operationId": "update-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cronJob",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a cronJob.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a cronJob",
                "operationId": "create-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the cronJob",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/cronJobs/{namespace}/{name}": {
            "get": {
                "description": "Get a cronJob by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a cronJob",
                "operationId": "get-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CronJob"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cronJob by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a cronJob",
                "operationId": "delete-object-cronJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/daemonSets/{namespace}": {
            "get": {
                "description": "Get all daemonSets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all daemonSets",
                "operationId": "get-object-daemonSets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DaemonSet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a daemonSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a daemonSet",
                "operationId": "update-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the daemonSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a daemonSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a daemonSet",
                "operationId": "create-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the daemonSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/daemonSets/{namespace}/{name}": {
            "get": {
                "description": "Get a daemonSet by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a daemonSet",
                "operationId": "get-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DaemonSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a daemonSet by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a daemonSet",
                "operationId": "delete-object-daemonSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/deployments/{namespace}": {
            "get": {
                "description": "Get all deployments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all deployments",
                "operationId": "get-object-deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deployment"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a deployment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a deployment",
                "operationId": "update-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the deployment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a deployment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a deployment",
                "operationId": "create-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the deployment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/deployments/{namespace}/{name}": {
            "get": {
                "description": "Get a deployment by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a deployment",
                "operationId": "get-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Deployment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a deployment by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a deployment",
                "operationId": "delete-object-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/jobs/{namespace}": {
            "get": {
                "description": "Get all jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all jobs",
                "operationId": "get-object-jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Job"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a job",
                "operationId": "update-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the job",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a job",
                "operationId": "create-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the job",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/jobs/{namespace}/{name}": {
            "get": {
                "description": "Get a job by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a job",
                "operationId": "get-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Job"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a job",
                "operationId": "delete-object-job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/namespaces": {
            "get": {
                "description": "Get all namespaces",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all namespaces",
                "operationId": "get-object-namespaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Namespace"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a namespace",
                "operationId": "update-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the namespace",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a namespace.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a namespace",
                "operationId": "create-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the namespace",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/namespaces/{name}": {
            "get": {
                "description": "Get a namespace by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a namespace",
                "operationId": "get-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Namespace"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a namespace by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a namespace",
                "operationId": "delete-object-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/networkPolicies/{namespace}": {
            "get": {
                "description": "Get all networkPolicies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all networkPolicies",
                "operationId": "get-object-networkPolicies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkPolicy"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a networkPolicy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a networkPolicy",
                "operationId": "update-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the networkPolicy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a networkPolicy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a networkPolicy",
                "operationId": "create-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the networkPolicy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/networkPolicies/{namespace}/{name}": {
            "get": {
                "description": "Get a networkPolicy by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a networkPolicy",
                "operationId": "get-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NetworkPolicy"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a networkPolicy by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a networkPolicy",
                "operationId": "delete-object-networkPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodeMetricses": {
            "get": {
                "description": "Get all nodeMetricses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all nodeMetricses",
                "operationId": "get-object-nodeMetricses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NodeMetrics"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodeMetricses/{name}": {
            "get": {
                "description": "Get a nodeMetrics by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a nodeMetrics",
                "operationId": "get-object-nodeMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NodeMetrics"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodes": {
            "get": {
                "description": "Get all nodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all nodes",
                "operationId": "get-object-nodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a node.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a node",
                "operationId": "update-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the node",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a node.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a node",
                "operationId": "create-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the node",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/nodes/{name}": {
            "get": {
                "description": "Get a node by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a node",
                "operationId": "get-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a node by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a node",
                "operationId": "delete-object-node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumeClaims/{namespace}": {
            "get": {
                "description": "Get all persistentVolumeClaims",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all persistentVolumeClaims",
                "operationId": "get-object-persistentVolumeClaims",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersistentVolumeClaim"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a persistentVolumeClaim.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a persistentVolumeClaim",
                "operationId": "update-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolumeClaim",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a persistentVolumeClaim.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a persistentVolumeClaim",
                "operationId": "create-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolumeClaim",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumeClaims/{namespace}/{name}": {
            "get": {
                "description": "Get a persistentVolumeClaim by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a persistentVolumeClaim",
                "operationId": "get-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolumeClaim"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a persistentVolumeClaim by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a persistentVolumeClaim",
                "operationId": "delete-object-persistentVolumeClaim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumes": {
            "get": {
                "description": "Get all persistentVolumes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all persistentVolumes",
                "operationId": "get-object-persistentVolumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PersistentVolume"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a persistentVolume.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a persistentVolume",
                "operationId": "update-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolume",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a persistentVolume.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a persistentVolume",
                "operationId": "create-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the persistentVolume",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/persistentVolumes/{name}": {
            "get": {
                "description": "Get a persistentVolume by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a persistentVolume",
                "operationId": "get-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PersistentVolume"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a persistentVolume by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a persistentVolume",
                "operationId": "delete-object-persistentVolume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/podMetricses/{namespace}": {
            "get": {
                "description": "Get all podMetricses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all podMetricses",
                "operationId": "get-object-podMetricses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PodMetrics"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/podMetricses/{namespace}/{name}": {
            "get": {
                "description": "Get a podMetrics by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a podMetrics",
                "operationId": "get-object-podMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/PodMetrics"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/pods/{namespace}": {
            "get": {
                "description": "Get all pods",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all pods",
                "operationId": "get-object-pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pod"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a pod.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a pod",
                "operationId": "update-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the pod",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a pod.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a pod",
                "operationId": "create-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the pod",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/pods/{namespace}/{name}": {
            "get": {
                "description": "Get a pod by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a pod",
                "operationId": "get-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Pod"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a pod by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a pod",
                "operationId": "delete-object-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicaSets/{namespace}": {
            "get": {
                "description": "Get all replicaSets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all replicaSets",
                "operationId": "get-object-replicaSets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReplicaSet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a replicaSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a replicaSet",
                "operationId": "update-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicaSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a replicaSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a replicaSet",
                "operationId": "create-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicaSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicaSets/{namespace}/{name}": {
            "get": {
                "description": "Get a replicaSet by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a replicaSet",
                "operationId": "get-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicaSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a replicaSet by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a replicaSet",
                "operationId": "delete-object-replicaSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicationControllers/{namespace}": {
            "get": {
                "description": "Get all replicationControllers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all replicationControllers",
                "operationId": "get-object-replicationControllers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReplicationController"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a replicationController.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a replicationController",
                "operationId": "update-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicationController",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a replicationController.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a replicationController",
                "operationId": "create-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the replicationController",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/replicationControllers/{namespace}/{name}": {
            "get": {
                "description": "Get a replicationController by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a replicationController",
                "operationId": "get-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ReplicationController"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a replicationController by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a replicationController",
                "operationId": "delete-object-replicationController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roleBindings/{namespace}": {
            "get": {
                "description": "Get all roleBindings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all roleBindings",
                "operationId": "get-object-roleBindings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleBinding"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a roleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a roleBinding",
                "operationId": "update-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the roleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a roleBinding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a roleBinding",
                "operationId": "create-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the roleBinding",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roleBindings/{namespace}/{name}": {
            "get": {
                "description": "Get a roleBinding by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a roleBinding",
                "operationId": "get-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/RoleBinding"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a roleBinding by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a roleBinding",
                "operationId": "delete-object-roleBinding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roles/{namespace}": {
            "get": {
                "description": "Get all roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all roles",
                "operationId": "get-object-roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a role",
                "operationId": "update-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a role",
                "operationId": "create-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/roles/{namespace}/{name}": {
            "get": {
                "description": "Get a role by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a role",
                "operationId": "get-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a role",
                "operationId": "delete-object-role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/secrets/{namespace}": {
            "get": {
                "description": "Get all secrets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all secrets",
                "operationId": "get-object-secrets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Secret"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a secret.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a secret",
                "operationId": "update-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a secret.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a secret",
                "operationId": "create-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/secrets/{namespace}/{name}": {
            "get": {
                "description": "Get a secret by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a secret",
                "operationId": "get-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Secret"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a secret by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a secret",
                "operationId": "delete-object-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/serviceAccounts/{namespace}": {
            "get": {
                "description": "Get all serviceAccounts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all serviceAccounts",
                "operationId": "get-object-serviceAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceAccount"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a serviceAccount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a serviceAccount",
                "operationId": "update-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the serviceAccount",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a serviceAccount.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a serviceAccount",
                "operationId": "create-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the serviceAccount",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/serviceAccounts/{namespace}/{name}": {
            "get": {
                "description": "Get a serviceAccount by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a serviceAccount",
                "operationId": "get-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ServiceAccount"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a serviceAccount by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a serviceAccount",
                "operationId": "delete-object-serviceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/services/{namespace}": {
            "get": {
                "description": "Get all services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all services",
                "operationId": "get-object-services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a service",
                "operationId": "update-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the service",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a service",
                "operationId": "create-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the service",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/services/{namespace}/{name}": {
            "get": {
                "description": "Get a service by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a service",
                "operationId": "get-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a service by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a service",
                "operationId": "delete-object-service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/statefulSets/{namespace}": {
            "get": {
                "description": "Get all statefulSets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get all statefulSets",
                "operationId": "get-object-statefulSets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StatefulSet"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a statefulSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Update a statefulSet",
                "operationId": "update-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the statefulSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a statefulSet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Create a statefulSet",
                "operationId": "create-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the statefulSet",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/statefulSets/{namespace}/{name}": {
            "get": {
                "description": "Get a statefulSet by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Get a statefulSet",
                "operationId": "get-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StatefulSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a statefulSet by name",
                "tags": [
                    "ObjectsNamespaceLevel"
                ],
                "summary": "Delete a statefulSet",
                "operationId": "delete-object-statefulSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/storageClasses": {
            "get": {
                "description": "Get all storageClasses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get all storageClasses",
                "operationId": "get-object-storageClasses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StorageClass"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a storageClass.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Update a storageClass",
                "operationId": "update-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the storageClass",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a storageClass.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Create a storageClass",
                "operationId": "create-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the definition of the storageClass",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/objects/{contextName}/storageClasses/{name}": {
            "get": {
                "description": "Get a storageClass by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Get a storageClass",
                "operationId": "get-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/StorageClass"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a storageClass by name",
                "tags": [
                    "ObjectsClusterLevel"
                ],
                "summary": "Delete a storageClass",
                "operationId": "delete-object-storageClass",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the name of the object",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/search/{contextName}": {
            "post": {
                "description": "Search the context for all kind objects. All the parameters (except the object types) can be given as regexp.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search objects",
                "operationId": "post-search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the parameters of the search",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/search.Parameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/summary/{contextName}": {
            "get": {
                "description": "get the summary of a configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Summary"
                ],
                "summary": "Get the global status, or summary, of the given configuration",
                "operationId": "get-summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the name of the context",
                        "name": "contextName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/report.ClusterStateReport"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Deployment": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.DeploymentSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.DeploymentStatus",
                }
            }
        },
        "StatefulSet": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.StatefulSetSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.StatefulSetStatus",
                }
            }
        },
        "DaemonSet": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.DaemonSetSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.DaemonSetStatus",
                }
            }
        },
        "ReplicaSet": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.ReplicaSetSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.ReplicaSetStatus",
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/batchv1.JobSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/batchv1.JobStatus",
                }
            }
        },
        "CronJob": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/batchv1beta1.CronJobSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/batchv1beta1.CronJobStatus",
                }
            }
        },
        "ConfigMap": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "binaryData": {
                    "type": "map"
                }
            }
        },
        "Namespace": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NamespaceSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NamespaceStatus",
                }
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NodeSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NodeStatus",
                }
            }
        },
        "PersistentVolume": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PersistentVolumeSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PersistentVolumeStatus",
                }
            }
        },
        "PersistentVolumeClaim": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PersistentVolumeClaimSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PersistentVolumeClaimStatus",
                }
            }
        },
        "Pod": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodStatus",
                }
            }
        },
        "ReplicationController": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ReplicationControllerSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ReplicationControllerStatus",
                }
            }
        },
        "Secret": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "data": {
                    "type": "map"
                },
                "stringData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ServiceSpec",
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ServiceStatus",
                }
            }
        },
        "ServiceAccount": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ObjectReference",
                    }
                },
                "imagePullSecrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.LocalObjectReference",
                    }
                },
                "automountServiceAccountToken": {
                    "type": "boolean"
                }
            }
        },
        "PodMetrics": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "timestamp": {
                    "type": "string"
                },
                "window": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.Duration",
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metricsv1beta1.ContainerMetrics",
                    }
                }
            }
        },
        "NodeMetrics": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "timestamp": {
                    "type": "string"
                },
                "window": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.Duration",
                },
                "usage": {
                    "type": "map"
                }
            }
        },
        "NetworkPolicy": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/networkingv1.NetworkPolicySpec",
                }
            }
        },
        "ClusterRole": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbacv1.PolicyRule",
                    }
                },
                "aggregationRule": {
                    "$ref": "#/definitions/rbacv1.AggregationRule",
                }
            }
        },
        "ClusterRoleBinding": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbacv1.Subject",
                    }
                },
                "roleRef": {
                    "type": "object",
                    "$ref": "#/definitions/rbacv1.RoleRef",
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbacv1.PolicyRule",
                    }
                }
            }
        },
        "RoleBinding": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rbacv1.Subject",
                    }
                },
                "roleRef": {
                    "type": "object",
                    "$ref": "#/definitions/rbacv1.RoleRef",
                }
            }
        },
        "StorageClass": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "provisioner": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "reclaimPolicy": {
                    "type": "string"
                },
                "mountOptions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "allowVolumeExpansion": {
                    "type": "boolean"
                },
                "volumeBindingMode": {
                    "type": "string"
                },
                "allowedTopologies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.TopologySelectorTerm",
                    }
                }
            }
        },
        "appsv1.DeploymentCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastUpdateTime": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "appsv1.DeploymentSpec": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                },
                "selector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "template": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodTemplateSpec",
                },
                "strategy": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.DeploymentStrategy",
                },
                "minReadySeconds": {
                    "type": "integer"
                },
                "revisionHistoryLimit": {
                    "type": "integer"
                },
                "paused": {
                    "type": "boolean"
                },
                "progressDeadlineSeconds": {
                    "type": "integer"
                }
            }
        },
        "appsv1.DeploymentStatus": {
            "type": "object",
            "properties": {
                "observedGeneration": {
                    "type": "integer"
                },
                "replicas": {
                    "type": "integer"
                },
                "updatedReplicas": {
                    "type": "integer"
                },
                "readyReplicas": {
                    "type": "integer"
                },
                "availableReplicas": {
                    "type": "integer"
                },
                "unavailableReplicas": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appsv1.DeploymentCondition",
                    }
                },
                "collisionCount": {
                    "type": "integer"
                }
            }
        },
        "appsv1.DeploymentStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "rollingUpdate": {
                    "$ref": "#/definitions/appsv1.RollingUpdateDeployment",
                }
            }
        },
        "appsv1.RollingUpdateDeployment": {
            "type": "object",
            "properties": {
                "maxUnavailable": {
                    "$ref": "#/definitions/intstr.IntOrString",
                },
                "maxSurge": {
                    "$ref": "#/definitions/intstr.IntOrString",
                }
            }
        },
        "appsv1.DaemonSetSpec": {
            "type": "object",
            "properties": {
                "selector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "template": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodTemplateSpec",
                },
                "updateStrategy": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.DaemonSetUpdateStrategy",
                },
                "minReadySeconds": {
                    "type": "integer"
                },
                "revisionHistoryLimit": {
                    "type": "integer"
                }
            }
        },
        "appsv1.DaemonSetStatus": {
            "type": "object",
            "properties": {
                "currentNumberScheduled": {
                    "type": "integer"
                },
                "numberMisscheduled": {
                    "type": "integer"
                },
                "desiredNumberScheduled": {
                    "type": "integer"
                },
                "numberReady": {
                    "type": "integer"
                },
                "observedGeneration": {
                    "type": "integer"
                },
                "updatedNumberScheduled": {
                    "type": "integer"
                },
                "numberAvailable": {
                    "type": "integer"
                },
                "numberUnavailable": {
                    "type": "integer"
                },
                "collisionCount": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appsv1.DaemonSetCondition",
                    }
                }
            }
        },
        "appsv1.DaemonSetCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "appsv1.DaemonSetUpdateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "rollingUpdate": {
                    "$ref": "#/definitions/appsv1.RollingUpdateDaemonSet",
                }
            }
        },
        "appsv1.ReplicaSetSpec": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                },
                "minReadySeconds": {
                    "type": "integer"
                },
                "selector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "template": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodTemplateSpec",
                }
            }
        },
        "appsv1.ReplicaSetStatus": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                },
                "fullyLabeledReplicas": {
                    "type": "integer"
                },
                "readyReplicas": {
                    "type": "integer"
                },
                "availableReplicas": {
                    "type": "integer"
                },
                "observedGeneration": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appsv1.ReplicaSetCondition",
                    }
                }
            }
        },
        "appsv1.ReplicaSetCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "appsv1.StatefulSetStatus": {
            "type": "object",
            "properties": {
                "observedGeneration": {
                    "type": "integer"
                },
                "replicas": {
                    "type": "integer"
                },
                "readyReplicas": {
                    "type": "integer"
                },
                "currentReplicas": {
                    "type": "integer"
                },
                "updatedReplicas": {
                    "type": "integer"
                },
                "currentRevision": {
                    "type": "string"
                },
                "updateRevision": {
                    "type": "string"
                },
                "collisionCount": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appsv1.StatefulSetCondition",
                    }
                }
            }
        },
        "appsv1.StatefulSetSpec": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                },
                "selector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "template": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodTemplateSpec",
                },
                "volumeClaimTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PersistentVolumeClaim",
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "podManagementPolicy": {
                    "type": "string"
                },
                "updateStrategy": {
                    "type": "object",
                    "$ref": "#/definitions/appsv1.StatefulSetUpdateStrategy",
                },
                "revisionHistoryLimit": {
                    "type": "integer"
                }
            }
        },
        "appsv1.StatefulSetCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "appsv1.StatefulSetUpdateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "rollingUpdate": {
                    "$ref": "#/definitions/appsv1.RollingUpdateStatefulSetStrategy",
                }
            }
        },
        "appsv1.RollingUpdateDaemonSet": {
            "type": "object",
            "properties": {
                "maxUnavailable": {
                    "$ref": "#/definitions/intstr.IntOrString",
                }
            }
        },
        "appsv1.RollingUpdateStatefulSetStrategy": {
            "type": "object",
            "properties": {
                "partition": {
                    "type": "integer"
                }
            }
        },
        "batchv1.JobSpec": {
            "type": "object",
            "properties": {
                "parallelism": {
                    "type": "integer"
                },
                "completions": {
                    "type": "integer"
                },
                "activeDeadlineSeconds": {
                    "type": "integer"
                },
                "backoffLimit": {
                    "type": "integer"
                },
                "selector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "manualSelector": {
                    "type": "boolean"
                },
                "template": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodTemplateSpec",
                },
                "ttlSecondsAfterFinished": {
                    "type": "integer"
                }
            }
        },
        "batchv1.JobStatus": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/batchv1.JobCondition",
                    }
                },
                "startTime": {
                    "type": "string"
                },
                "completionTime": {
                    "type": "string"
                },
                "active": {
                    "type": "integer"
                },
                "succeeded": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                }
            }
        },
        "batchv1.JobCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastProbeTime": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "batchv1beta1.CronJobSpec": {
            "type": "object",
            "properties": {
                "schedule": {
                    "type": "string"
                },
                "startingDeadlineSeconds": {
                    "type": "integer"
                },
                "concurrencyPolicy": {
                    "type": "string"
                },
                "suspend": {
                    "type": "boolean"
                },
                "jobTemplate": {
                    "type": "object",
                    "$ref": "#/definitions/batchv1beta1.JobTemplateSpec",
                },
                "successfulJobsHistoryLimit": {
                    "type": "integer"
                },
                "failedJobsHistoryLimit": {
                    "type": "integer"
                }
            }
        },
        "batchv1beta1.CronJobStatus": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ObjectReference",
                    }
                },
                "lastScheduleTime": {
                    "type": "string"
                }
            }
        },
        "batchv1beta1.JobTemplateSpec": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/batchv1.JobSpec",
                }
            }
        },
        "corev1.Affinity": {
            "type": "object",
            "properties": {
                "nodeAffinity": {
                    "$ref": "#/definitions/corev1.NodeAffinity",
                },
                "podAffinity": {
                    "$ref": "#/definitions/corev1.PodAffinity",
                },
                "podAntiAffinity": {
                    "$ref": "#/definitions/corev1.PodAntiAffinity",
                }
            }
        },
        "corev1.AttachedVolume": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "devicePath": {
                    "type": "string"
                }
            }
        },
        "corev1.Capabilities": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "drop": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "corev1.ClientIPConfig": {
            "type": "object",
            "properties": {
                "timeoutSeconds": {
                    "type": "integer"
                }
            }
        },
        "corev1.ConfigMapEnvSource": {
            "type": "object",
            "properties": {
                "optional": {
                    "type": "boolean"
                }
            }
        },
        "corev1.ConfigMapKeySelector": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "optional": {
                    "type": "boolean"
                }
            }
        },
        "corev1.ConfigMapNodeConfigSource": {
            "type": "object",
            "properties": {
                "namespace": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "resourceVersion": {
                    "type": "string"
                },
                "kubeletConfigKey": {
                    "type": "string"
                }
            }
        },
        "corev1.Container": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "workingDir": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ContainerPort",
                    }
                },
                "envFrom": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.EnvFromSource",
                    }
                },
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.EnvVar",
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ResourceRequirements",
                },
                "volumeMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.VolumeMount",
                    }
                },
                "volumeDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.VolumeDevice",
                    }
                },
                "livenessProbe": {
                    "$ref": "#/definitions/corev1.Probe",
                },
                "readinessProbe": {
                    "$ref": "#/definitions/corev1.Probe",
                },
                "lifecycle": {
                    "$ref": "#/definitions/corev1.Lifecycle",
                },
                "terminationMessagePath": {
                    "type": "string"
                },
                "terminationMessagePolicy": {
                    "type": "string"
                },
                "imagePullPolicy": {
                    "type": "string"
                },
                "securityContext": {
                    "$ref": "#/definitions/corev1.SecurityContext",
                },
                "stdin": {
                    "type": "boolean"
                },
                "stdinOnce": {
                    "type": "boolean"
                },
                "tty": {
                    "type": "boolean"
                }
            }
        },
        "corev1.ContainerImage": {
            "type": "object",
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "sizeBytes": {
                    "type": "integer"
                }
            }
        },
        "corev1.ContainerPort": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "hostPort": {
                    "type": "integer"
                },
                "containerPort": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "hostIP": {
                    "type": "string"
                }
            }
        },
        "corev1.ContainerState": {
            "type": "object",
            "properties": {
                "waiting": {
                    "$ref": "#/definitions/corev1.ContainerStateWaiting",
                },
                "running": {
                    "$ref": "#/definitions/corev1.ContainerStateRunning",
                },
                "terminated": {
                    "$ref": "#/definitions/corev1.ContainerStateTerminated",
                }
            }
        },
        "corev1.ContainerStateRunning": {
            "type": "object",
            "properties": {
                "startedAt": {
                    "type": "string"
                }
            }
        },
        "corev1.ContainerStateTerminated": {
            "type": "object",
            "properties": {
                "exitCode": {
                    "type": "integer"
                },
                "signal": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "containerID": {
                    "type": "string"
                }
            }
        },
        "corev1.ContainerStateWaiting": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "corev1.ContainerStatus": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ContainerState",
                },
                "lastState": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ContainerState",
                },
                "ready": {
                    "type": "boolean"
                },
                "restartCount": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "imageID": {
                    "type": "string"
                },
                "containerID": {
                    "type": "string"
                }
            }
        },
        "corev1.DaemonEndpoint": {
            "type": "object",
            "properties": {
                "Port": {
                    "type": "integer"
                }
            }
        },
        "corev1.EnvFromSource": {
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "configMapRef": {
                    "$ref": "#/definitions/corev1.ConfigMapEnvSource",
                },
                "secretRef": {
                    "$ref": "#/definitions/corev1.SecretEnvSource",
                }
            }
        },
        "corev1.EnvVar": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueFrom": {
                    "$ref": "#/definitions/corev1.EnvVarSource",
                }
            }
        },
        "corev1.EnvVarSource": {
            "type": "object",
            "properties": {
                "fieldRef": {
                    "$ref": "#/definitions/corev1.ObjectFieldSelector",
                },
                "resourceFieldRef": {
                    "$ref": "#/definitions/corev1.ResourceFieldSelector",
                },
                "configMapKeyRef": {
                    "$ref": "#/definitions/corev1.ConfigMapKeySelector",
                },
                "secretKeyRef": {
                    "$ref": "#/definitions/corev1.SecretKeySelector",
                }
            }
        },
        "corev1.ExecAction": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "corev1.HTTPGetAction": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "object",
                    "$ref": "#/definitions/intstr.IntOrString",
                },
                "host": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.HTTPHeader",
                    }
                }
            }
        },
        "corev1.HTTPHeader": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "corev1.Handler": {
            "type": "object",
            "properties": {
                "exec": {
                    "$ref": "#/definitions/corev1.ExecAction",
                },
                "httpGet": {
                    "$ref": "#/definitions/corev1.HTTPGetAction",
                },
                "tcpSocket": {
                    "$ref": "#/definitions/corev1.TCPSocketAction",
                }
            }
        },
        "corev1.HostAlias": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "corev1.Lifecycle": {
            "type": "object",
            "properties": {
                "postStart": {
                    "$ref": "#/definitions/corev1.Handler",
                },
                "preStop": {
                    "$ref": "#/definitions/corev1.Handler",
                }
            }
        },
        "corev1.LoadBalancerIngress": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                }
            }
        },
        "corev1.LoadBalancerStatus": {
            "type": "object",
            "properties": {
                "ingress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.LoadBalancerIngress",
                    }
                }
            }
        },
        "corev1.LocalObjectReference": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "corev1.NamespaceSpec": {
            "type": "object",
            "properties": {
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "corev1.NamespaceStatus": {
            "type": "object",
            "properties": {
                "phase": {
                    "type": "string"
                }
            }
        },
        "corev1.NodeAddress": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "corev1.NodeAffinity": {
            "type": "object",
            "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "$ref": "#/definitions/corev1.NodeSelector",
                },
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PreferredSchedulingTerm",
                    }
                }
            }
        },
        "corev1.NodeCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastHeartbeatTime": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "corev1.NodeConfigSource": {
            "type": "object",
            "properties": {
                "configMap": {
                    "$ref": "#/definitions/corev1.ConfigMapNodeConfigSource",
                }
            }
        },
        "corev1.NodeConfigStatus": {
            "type": "object",
            "properties": {
                "assigned": {
                    "$ref": "#/definitions/corev1.NodeConfigSource",
                },
                "active": {
                    "$ref": "#/definitions/corev1.NodeConfigSource",
                },
                "lastKnownGood": {
                    "$ref": "#/definitions/corev1.NodeConfigSource",
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "corev1.NodeDaemonEndpoints": {
            "type": "object",
            "properties": {
                "kubeletEndpoint": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.DaemonEndpoint",
                }
            }
        },
        "corev1.NodeSelector": {
            "type": "object",
            "properties": {
                "nodeSelectorTerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.NodeSelectorTerm",
                    }
                }
            }
        },
        "corev1.NodeSelectorRequirement": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "corev1.NodeSelectorTerm": {
            "type": "object",
            "properties": {
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.NodeSelectorRequirement",
                    }
                },
                "matchFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.NodeSelectorRequirement",
                    }
                }
            }
        },
        "corev1.NodeSpec": {
            "type": "object",
            "properties": {
                "podCIDR": {
                    "type": "string"
                },
                "providerID": {
                    "type": "string"
                },
                "unschedulable": {
                    "type": "boolean"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.Taint",
                    }
                },
                "configSource": {
                    "$ref": "#/definitions/corev1.NodeConfigSource",
                },
                "externalID": {
                    "type": "string"
                }
            }
        },
        "corev1.NodeStatus": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "map"
                },
                "allocatable": {
                    "type": "map"
                },
                "phase": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.NodeCondition",
                    }
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.NodeAddress",
                    }
                },
                "daemonEndpoints": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NodeDaemonEndpoints",
                },
                "nodeInfo": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NodeSystemInfo",
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ContainerImage",
                    }
                },
                "volumesInUse": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "volumesAttached": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.AttachedVolume",
                    }
                },
                "config": {
                    "$ref": "#/definitions/corev1.NodeConfigStatus",
                }
            }
        },
        "corev1.NodeSystemInfo": {
            "type": "object",
            "properties": {
                "machineID": {
                    "type": "string"
                },
                "systemUUID": {
                    "type": "string"
                },
                "bootID": {
                    "type": "string"
                },
                "kernelVersion": {
                    "type": "string"
                },
                "osImage": {
                    "type": "string"
                },
                "containerRuntimeVersion": {
                    "type": "string"
                },
                "kubeletVersion": {
                    "type": "string"
                },
                "kubeProxyVersion": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "architecture": {
                    "type": "string"
                }
            }
        },
        "corev1.ObjectFieldSelector": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "fieldPath": {
                    "type": "string"
                }
            }
        },
        "corev1.ObjectReference": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "apiVersion": {
                    "type": "string"
                },
                "resourceVersion": {
                    "type": "string"
                },
                "fieldPath": {
                    "type": "string"
                }
            }
        },
        "corev1.PersistentVolumeClaimCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastProbeTime": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "corev1.PersistentVolumeClaimSpec": {
            "type": "object",
            "properties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "selector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.ResourceRequirements",
                },
                "volumeName": {
                    "type": "string"
                },
                "storageClassName": {
                    "type": "string"
                },
                "volumeMode": {
                    "type": "string"
                },
                "dataSource": {
                    "$ref": "#/definitions/corev1.TypedLocalObjectReference",
                }
            }
        },
        "corev1.PersistentVolumeClaimStatus": {
            "type": "object",
            "properties": {
                "phase": {
                    "type": "string"
                },
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "capacity": {
                    "type": "map"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PersistentVolumeClaimCondition",
                    }
                }
            }
        },
        "corev1.PersistentVolumeSpec": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "map"
                },
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "claimRef": {
                    "$ref": "#/definitions/corev1.ObjectReference",
                },
                "persistentVolumeReclaimPolicy": {
                    "type": "string"
                },
                "storageClassName": {
                    "type": "string"
                },
                "mountOptions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "volumeMode": {
                    "type": "string"
                },
                "nodeAffinity": {
                    "$ref": "#/definitions/corev1.VolumeNodeAffinity",
                }
            }
        },
        "corev1.PersistentVolumeStatus": {
            "type": "object",
            "properties": {
                "phase": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "corev1.PodAffinity": {
            "type": "object",
            "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PodAffinityTerm",
                    }
                },
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.WeightedPodAffinityTerm",
                    }
                }
            }
        },
        "corev1.PodAffinityTerm": {
            "type": "object",
            "properties": {
                "labelSelector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "topologyKey": {
                    "type": "string"
                }
            }
        },
        "corev1.PodAntiAffinity": {
            "type": "object",
            "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PodAffinityTerm",
                    }
                },
                "preferredDuringSchedulingIgnoredDuringExecution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.WeightedPodAffinityTerm",
                    }
                }
            }
        },
        "corev1.PodCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastProbeTime": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "corev1.PodDNSConfig": {
            "type": "object",
            "properties": {
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "searches": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PodDNSConfigOption",
                    }
                }
            }
        },
        "corev1.PodDNSConfigOption": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "corev1.PodReadinessGate": {
            "type": "object",
            "properties": {
                "conditionType": {
                    "type": "string"
                }
            }
        },
        "corev1.PodSecurityContext": {
            "type": "object",
            "properties": {
                "seLinuxOptions": {
                    "$ref": "#/definitions/corev1.SELinuxOptions",
                },
                "windowsOptions": {
                    "$ref": "#/definitions/corev1.WindowsSecurityContextOptions",
                },
                "runAsUser": {
                    "type": "integer"
                },
                "runAsGroup": {
                    "type": "integer"
                },
                "runAsNonRoot": {
                    "type": "boolean"
                },
                "supplementalGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                    }
                },
                "fsGroup": {
                    "type": "integer"
                },
                "sysctls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.Sysctl",
                    }
                }
            }
        },
        "corev1.PodSpec": {
            "type": "object",
            "properties": {
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.Volume",
                    }
                },
                "initContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.Container",
                    }
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.Container",
                    }
                },
                "restartPolicy": {
                    "type": "string"
                },
                "terminationGracePeriodSeconds": {
                    "type": "integer"
                },
                "activeDeadlineSeconds": {
                    "type": "integer"
                },
                "dnsPolicy": {
                    "type": "string"
                },
                "nodeSelector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "serviceAccountName": {
                    "type": "string"
                },
                "serviceAccount": {
                    "type": "string"
                },
                "automountServiceAccountToken": {
                    "type": "boolean"
                },
                "nodeName": {
                    "type": "string"
                },
                "hostNetwork": {
                    "type": "boolean"
                },
                "hostPID": {
                    "type": "boolean"
                },
                "hostIPC": {
                    "type": "boolean"
                },
                "shareProcessNamespace": {
                    "type": "boolean"
                },
                "securityContext": {
                    "$ref": "#/definitions/corev1.PodSecurityContext",
                },
                "imagePullSecrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.LocalObjectReference",
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "affinity": {
                    "$ref": "#/definitions/corev1.Affinity",
                },
                "schedulerName": {
                    "type": "string"
                },
                "tolerations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.Toleration",
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.HostAlias",
                    }
                },
                "priorityClassName": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "dnsConfig": {
                    "$ref": "#/definitions/corev1.PodDNSConfig",
                },
                "readinessGates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PodReadinessGate",
                    }
                },
                "runtimeClassName": {
                    "type": "string"
                },
                "enableServiceLinks": {
                    "type": "boolean"
                },
                "preemptionPolicy": {
                    "type": "string"
                }
            }
        },
        "corev1.PodStatus": {
            "type": "object",
            "properties": {
                "phase": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.PodCondition",
                    }
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "nominatedNodeName": {
                    "type": "string"
                },
                "hostIP": {
                    "type": "string"
                },
                "podIP": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "initContainerStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ContainerStatus",
                    }
                },
                "containerStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ContainerStatus",
                    }
                },
                "qosClass": {
                    "type": "string"
                }
            }
        },
        "corev1.PodTemplateSpec": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ObjectMeta",
                },
                "spec": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodSpec",
                }
            }
        },
        "corev1.PreferredSchedulingTerm": {
            "type": "object",
            "properties": {
                "weight": {
                    "type": "integer"
                },
                "preference": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.NodeSelectorTerm",
                }
            }
        },
        "corev1.Probe": {
            "type": "object",
            "properties": {
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "timeoutSeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "successThreshold": {
                    "type": "integer"
                },
                "failureThreshold": {
                    "type": "integer"
                }
            }
        },
        "corev1.ReplicationControllerSpec": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                },
                "minReadySeconds": {
                    "type": "integer"
                },
                "selector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "template": {
                    "$ref": "#/definitions/corev1.PodTemplateSpec",
                }
            }
        },
        "corev1.ReplicationControllerStatus": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                },
                "fullyLabeledReplicas": {
                    "type": "integer"
                },
                "readyReplicas": {
                    "type": "integer"
                },
                "availableReplicas": {
                    "type": "integer"
                },
                "observedGeneration": {
                    "type": "integer"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ReplicationControllerCondition",
                    }
                }
            }
        },
        "corev1.ReplicationControllerCondition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastTransitionTime": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "corev1.ResourceFieldSelector": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "divisor": {
                    "type": "object",
                    "$ref": "#/definitions/resource.Quantity",
                }
            }
        },
        "corev1.ResourceRequirements": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "map"
                },
                "requests": {
                    "type": "map"
                }
            }
        },
        "corev1.SELinuxOptions": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                }
            }
        },
        "corev1.SecretEnvSource": {
            "type": "object",
            "properties": {
                "optional": {
                    "type": "boolean"
                }
            }
        },
        "corev1.SecretKeySelector": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "optional": {
                    "type": "boolean"
                }
            }
        },
        "corev1.SecurityContext": {
            "type": "object",
            "properties": {
                "capabilities": {
                    "$ref": "#/definitions/corev1.Capabilities",
                },
                "privileged": {
                    "type": "boolean"
                },
                "seLinuxOptions": {
                    "$ref": "#/definitions/corev1.SELinuxOptions",
                },
                "windowsOptions": {
                    "$ref": "#/definitions/corev1.WindowsSecurityContextOptions",
                },
                "runAsUser": {
                    "type": "integer"
                },
                "runAsGroup": {
                    "type": "integer"
                },
                "runAsNonRoot": {
                    "type": "boolean"
                },
                "readOnlyRootFilesystem": {
                    "type": "boolean"
                },
                "allowPrivilegeEscalation": {
                    "type": "boolean"
                },
                "procMount": {
                    "type": "string"
                }
            }
        },
        "corev1.ServicePort": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "targetPort": {
                    "type": "object",
                    "$ref": "#/definitions/intstr.IntOrString",
                },
                "nodePort": {
                    "type": "integer"
                }
            }
        },
        "corev1.ServiceSpec": {
            "type": "object",
            "properties": {
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.ServicePort",
                    }
                },
                "selector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "clusterIP": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "externalIPs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "sessionAffinity": {
                    "type": "string"
                },
                "loadBalancerIP": {
                    "type": "string"
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "externalName": {
                    "type": "string"
                },
                "externalTrafficPolicy": {
                    "type": "string"
                },
                "healthCheckNodePort": {
                    "type": "integer"
                },
                "publishNotReadyAddresses": {
                    "type": "boolean"
                },
                "sessionAffinityConfig": {
                    "$ref": "#/definitions/corev1.SessionAffinityConfig",
                }
            }
        },
        "corev1.ServiceStatus": {
            "type": "object",
            "properties": {
                "loadBalancer": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.LoadBalancerStatus",
                }
            }
        },
        "corev1.SessionAffinityConfig": {
            "type": "object",
            "properties": {
                "clientIP": {
                    "$ref": "#/definitions/corev1.ClientIPConfig",
                }
            }
        },
        "corev1.Sysctl": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "corev1.TCPSocketAction": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "object",
                    "$ref": "#/definitions/intstr.IntOrString",
                },
                "host": {
                    "type": "string"
                }
            }
        },
        "corev1.Taint": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "effect": {
                    "type": "string"
                },
                "timeAdded": {
                    "type": "string"
                }
            }
        },
        "corev1.Toleration": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "effect": {
                    "type": "string"
                },
                "tolerationSeconds": {
                    "type": "integer"
                }
            }
        },
        "corev1.TopologySelectorTerm": {
            "type": "object",
            "properties": {
                "matchLabelExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corev1.TopologySelectorLabelRequirement",
                    }
                }
            }
        },
        "corev1.TopologySelectorLabelRequirement": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "corev1.TypedLocalObjectReference": {
            "type": "object",
            "properties": {
                "apiGroup": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "corev1.Volume": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
            }
        },
        "corev1.VolumeDevice": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "devicePath": {
                    "type": "string"
                }
            }
        },
        "corev1.VolumeMount": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "mountPath": {
                    "type": "string"
                },
                "subPath": {
                    "type": "string"
                },
                "mountPropagation": {
                    "type": "string"
                },
                "subPathExpr": {
                    "type": "string"
                }
            }
        },
        "corev1.VolumeNodeAffinity": {
            "type": "object",
            "properties": {
                "required": {
                    "$ref": "#/definitions/corev1.NodeSelector",
                }
            }
        },
        "corev1.WeightedPodAffinityTerm": {
            "type": "object",
            "properties": {
                "weight": {
                    "type": "integer"
                },
                "podAffinityTerm": {
                    "type": "object",
                    "$ref": "#/definitions/corev1.PodAffinityTerm",
                }
            }
        },
        "corev1.WindowsSecurityContextOptions": {
            "type": "object",
            "properties": {
                "gmsaCredentialSpecName": {
                    "type": "string"
                },
                "gmsaCredentialSpec": {
                    "type": "string"
                }
            }
        },
        "intstr.IntOrString": {
            "type": "object",
            "properties": {
            }
        },
        "metricsv1beta1.ContainerMetrics": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "usage": {
                    "type": "map"
                }
            }
        },
        "metav1.Duration": {
            "type": "object",
            "properties": {
            }
        },
        "metav1.Fields": {
            "type": "object",
            "properties": {
            }
        },
        "metav1.Initializer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "metav1.Initializers": {
            "type": "object",
            "properties": {
                "pending": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metav1.Initializer",
                    }
                },
                "result": {
                    "$ref": "#/definitions/metav1.Status",
                }
            }
        },
        "metav1.LabelSelector": {
            "type": "object",
            "properties": {
                "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "matchExpressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metav1.LabelSelectorRequirement",
                    }
                }
            }
        },
        "metav1.LabelSelectorRequirement": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "metav1.ListMeta": {
            "type": "object",
            "properties": {
                "selfLink": {
                    "type": "string"
                },
                "resourceVersion": {
                    "type": "string"
                },
                "continue": {
                    "type": "string"
                },
                "remainingItemCount": {
                    "type": "integer"
                }
            }
        },
        "metav1.ManagedFieldsEntry": {
            "type": "object",
            "properties": {
                "manager": {
                    "type": "string"
                },
                "operation": {
                    "type": "string"
                },
                "apiVersion": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "fields": {
                    "$ref": "#/definitions/metav1.Fields",
                }
            }
        },
        "metav1.ObjectMeta": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "generateName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "selfLink": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "resourceVersion": {
                    "type": "string"
                },
                "generation": {
                    "type": "integer"
                },
                "creationTimestamp": {
                    "type": "string"
                },
                "deletionTimestamp": {
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "type": "integer"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                    }
                },
                "ownerReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metav1.OwnerReference",
                    }
                },
                "initializers": {
                    "$ref": "#/definitions/metav1.Initializers",
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "clusterName": {
                    "type": "string"
                },
                "managedFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metav1.ManagedFieldsEntry",
                    }
                }
            }
        },
        "metav1.OwnerReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "controller": {
                    "type": "boolean"
                },
                "blockOwnerDeletion": {
                    "type": "boolean"
                }
            }
        },
        "metav1.Status": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.ListMeta",
                },
                "status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/metav1.StatusDetails",
                },
                "code": {
                    "type": "integer"
                }
            }
        },
        "metav1.StatusCause": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                }
            }
        },
        "metav1.StatusDetails": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "causes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metav1.StatusCause",
                    }
                },
                "retryAfterSeconds": {
                    "type": "integer"
                }
            }
        },
        "networkingv1.IPBlock": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "except": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "networkingv1.NetworkPolicySpec": {
            "type": "object",
            "properties": {
                "podSelector": {
                    "type": "object",
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "ingress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkingv1.NetworkPolicyIngressRule",
                    }
                },
                "egress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkingv1.NetworkPolicyEgressRule",
                    }
                },
                "policyTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "networkingv1.NetworkPolicyEgressRule": {
            "type": "object",
            "properties": {
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkingv1.NetworkPolicyPort",
                    }
                },
                "to": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkingv1.NetworkPolicyPeer",
                    }
                }
            }
        },
        "networkingv1.NetworkPolicyIngressRule": {
            "type": "object",
            "properties": {
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkingv1.NetworkPolicyPort",
                    }
                },
                "from": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/networkingv1.NetworkPolicyPeer",
                    }
                }
            }
        },
        "networkingv1.NetworkPolicyPeer": {
            "type": "object",
            "properties": {
                "podSelector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "namespaceSelector": {
                    "$ref": "#/definitions/metav1.LabelSelector",
                },
                "ipBlock": {
                    "$ref": "#/definitions/networkingv1.IPBlock",
                }
            }
        },
        "networkingv1.NetworkPolicyPort": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "port": {
                    "$ref": "#/definitions/intstr.IntOrString",
                }
            }
        },
        "rbacv1.PolicyRule": {
            "type": "object",
            "properties": {
                "verbs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "apiGroups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "resourceNames": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                },
                "nonResourceURLs": {
                    "type": "array",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "rbacv1.RoleRef": {
            "type": "object",
            "properties": {
                "apiGroup": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "rbacv1.Subject": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "apiGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "rbacv1.AggregationRule": {
            "type": "object",
            "properties": {
                "clusterRoleSelectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/metav1.LabelSelector",
                    }
                }
            }
        },
        "resource.Quantity": {
            "type": "object",
            "properties": {
            }
        },
        "MapOfStrings": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "HTTPError": {
            "type": "object",
            "properties": {
                "message": "string"
            }
        },
        "context.DefinitionCluster": {
            "type": "object",
            "properties": {
                "certificate-authority": {
                    "type": "string"
                },
                "certificate-authority-data": {
                    "type": "string"
                },
                "insecure-skip-tls-verify": {
                    "type": "boolean"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "context.DefinitionContext": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "context.DefinitionUser": {
            "type": "object",
            "properties": {
                "client-certificate": {
                    "type": "string"
                },
                "client-certificate-data": {
                    "type": "string"
                },
                "client-key": {
                    "type": "string"
                },
                "client-key-data": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "context.KubeConfig": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.NamedCluster"
                    }
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.NamedContext"
                    }
                },
                "current-context": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "preferences": {
                    "type": "object"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.NamedUser"
                    }
                }
            }
        },
        "context.NamedCluster": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "object",
                    "$ref": "#/definitions/context.DefinitionCluster"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "context.NamedContext": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "object",
                    "$ref": "#/definitions/context.DefinitionContext"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "context.NamedUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/context.DefinitionUser"
                }
            }
        },
        "context.ParamClusterCertificateEmbedded": {
            "type": "object",
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "context.ParamClusterCertificateFile": {
            "type": "object",
            "properties": {
                "certificateAuthority": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            }
        },
        "context.ParamClusterInsecure": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "string"
                }
            }
        },
        "context.ParamContext": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "context.ParamCredentialsCertificateEmbedded": {
            "type": "object",
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                }
            }
        },
        "context.ParamCredentialsCertificateFile": {
            "type": "object",
            "properties": {
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                }
            }
        },
        "context.ParamCredentialsUserNamePassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "report.ClusterStateReport": {
            "type": "object",
            "properties": {
                "configMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ConfigMapReport"
                    }
                },
                "deployments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.DeploymentReport"
                    }
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.NamespaceReport"
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.NodeReport"
                    }
                },
                "persistentVolumeClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PersistentVolumeClaimReport"
                    }
                },
                "persistentVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PersistentVolumeReport"
                    }
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PodReport"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.SecretReport"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ServiceReport"
                    }
                }
            }
        },
        "report.ConfigMapReport": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "report.ContainerReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.PodPortReport"
                    }
                },
                "ready": {
                    "type": "boolean"
                }
            }
        },
        "report.DeploymentReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "selector": {
                    "type": "object"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.VolumeReport"
                    }
                }
            }
        },
        "report.NamespaceReport": {
            "type": "object",
            "properties": {
                "deploymentsIds": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podIds": {
                    "type": "string"
                },
                "serviceIds": {
                    "type": "string"
                }
            }
        },
        "report.NodeReport": {
            "type": "object",
            "properties": {
                "allowedCPUCores": {
                    "type": "integer"
                },
                "allowedRAM": {
                    "type": "integer"
                },
                "condition": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podIds": {
                    "type": "string"
                },
                "usageCPUCores": {
                    "type": "number"
                },
                "usageRAM": {
                    "type": "integer"
                }
            }
        },
        "report.PersistentVolumeClaimReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "report.PersistentVolumeReport": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "report.PodPortReport": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "report.PodReport": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ContainerReport"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "usageCPUCores": {
                    "type": "number"
                },
                "usageRAM": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.VolumeReport"
                    }
                }
            }
        },
        "report.SecretReport": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "report.ServicePortReport": {
            "type": "object",
            "properties": {
                "internalPort": {
                    "type": "integer"
                },
                "internalPortName": {
                    "type": "string"
                },
                "nodePort": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "report.ServiceReport": {
            "type": "object",
            "properties": {
                "clusterIP": {
                    "type": "string"
                },
                "externalIP": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podIds": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/report.ServicePortReport"
                    }
                },
                "selector": {
                    "type": "object"
                }
            }
        },
        "report.VolumeReport": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "persistentVolumeClaimName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "search.Parameter": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "labelValue": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "objectTypes": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
